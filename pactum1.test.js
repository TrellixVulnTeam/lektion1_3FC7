const pactum = require('pactum');

it('get 200 status from ica-api', async () => {
   await pactum.spec()
     .withMethod('GET')
    .get('https://handla.api.ica.se/api/login')
    .withHeaders('Authorization', 'Basic NzMwMjA0NzkxMDozMTQxNTk=')
    .expectStatus(200);
  
});



it('get 401 status from ica-api with faulty Authorization', async () => {
  await pactum.spec()
  .withMethod('GET')
 .get('https://handla.api.ica.se/api/login')
 .withHeaders('Authorization', 'Basic GzMwMjA0NzkxMDozMTQxNTk=')
 
 .expectStatus(401);
});

it('get 200 status and answer with responstime', async () => {
await pactum.spec()
  .get('https://handla.api.ica.se/api/login')
  .withHeaders('Authorization', 'Basic NzMwMjA0NzkxMDozMTQxNTk=')
  .expectStatus(200)
  .expectResponseTime(1000);

});


it('get a random recipe, measure responstime', async () => {
  await pactum.spec()
    .get('https://handla.api.ica.se//api/recipes/random?numberofrecipes=1')
   
    .expectStatus(200)
    .expectResponseTime(10000); //had to change from 1000 to 10000 due to flakiness
  
  });

  it('Verifies that user can get commom articles with status 200', async () => {
    await pactum.spec()
      .withMethod('GET')
     .get('https://handla.api.ica.se/api/user/commonarticles')
     .withHeaders('AuthenticationTicket', '27B69F6CD46841E24A7B8645C352E23C690A6CA499BF71835EABC78A9D3AC85A59FE5E76EC82EFAA0C41771ABCC729F674E3A2C660A208461B5ED0B635ECB264FE918877444A03188D5311ECAB5333FE33C382E3AC4A9A0B40D35B9A0BC82631FD0B6650A72FD94820E8D48E310773DE3206A198814F8672BF8A62DF79953A82B6B4D117347C740C6DF8E06647682FF9AC1851720284F9CBEDFE664BEDE8AE3C2D6B5F284A07190CB5DBA8F18685FBE7F1BF44ABBEA58B910786487BA0D5DD5F200D869A6A20CA6E8490DE92067A312331501DE038F85694BC2C00F0B32DCB9C151115615E68342733DC7EC9EBD2280A680356A9F05F029182F7490B726F21D93B93E0B27E80EE372675EEEB04022DE07D047CE76D5CFF68CFC4DE8189B71023B89A8AF1D4ABAAF5F57DF0A7D9D7265170A4E921F85FAEEAEEE239D8029267E78F6EDD314AFDB75EB0347A0AA39FF226AA61A145C012947BB96530AE4D78EEC3169792478686D4F18C71B963FBC3B3F9A5E5BAF7BE05323352BB5A97BEABCA620C0897CCC5D707779D37E311A51B3ED0583CC5DBDA8D8E5582BD227C5DE38A43BF3B5B48E3F5DC0EA5D2CB9D4950DFE4CA1342B7B0BAE5A7041681197ADC4FF4B1457A45BBD8CC51222BC0EE0145CCD0433B3704757AF0D9F239D819FBCA44AE4633CCE810F28FA39A14375467C8148568EF6D91F70221B97B11242C18C518E5ECC1CE79')
     .expectStatus(200);
   
 });

 it('Verifies offlineshoppinglist with status 200', async () => {
  await pactum.spec()
    .withMethod('GET')
   .get('https://handla.api.ica.se/api/user/offlineshoppinglists')
   .withHeaders('AuthenticationTicket', '27B69F6CD46841E24A7B8645C352E23C690A6CA499BF71835EABC78A9D3AC85A59FE5E76EC82EFAA0C41771ABCC729F674E3A2C660A208461B5ED0B635ECB264FE918877444A03188D5311ECAB5333FE33C382E3AC4A9A0B40D35B9A0BC82631FD0B6650A72FD94820E8D48E310773DE3206A198814F8672BF8A62DF79953A82B6B4D117347C740C6DF8E06647682FF9AC1851720284F9CBEDFE664BEDE8AE3C2D6B5F284A07190CB5DBA8F18685FBE7F1BF44ABBEA58B910786487BA0D5DD5F200D869A6A20CA6E8490DE92067A312331501DE038F85694BC2C00F0B32DCB9C151115615E68342733DC7EC9EBD2280A680356A9F05F029182F7490B726F21D93B93E0B27E80EE372675EEEB04022DE07D047CE76D5CFF68CFC4DE8189B71023B89A8AF1D4ABAAF5F57DF0A7D9D7265170A4E921F85FAEEAEEE239D8029267E78F6EDD314AFDB75EB0347A0AA39FF226AA61A145C012947BB96530AE4D78EEC3169792478686D4F18C71B963FBC3B3F9A5E5BAF7BE05323352BB5A97BEABCA620C0897CCC5D707779D37E311A51B3ED0583CC5DBDA8D8E5582BD227C5DE38A43BF3B5B48E3F5DC0EA5D2CB9D4950DFE4CA1342B7B0BAE5A7041681197ADC4FF4B1457A45BBD8CC51222BC0EE0145CCD0433B3704757AF0D9F239D819FBCA44AE4633CCE810F28FA39A14375467C8148568EF6D91F70221B97B11242C18C518E5ECC1CE79')
   .expectStatus(200);
 
});






